name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        packages: |
          platform-tools
          platforms;android-35
          build-tools;35.0.0
          cmdline-tools;latest
        
    - name: Accept Android SDK licenses
      run: yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
      
    - name: Clean npm cache
      run: npm cache clean --force
      
    - name: Install dependencies
      run: |
        npm ci --legacy-peer-deps
        npm ls --depth=0
      
    - name: Verify Capacitor installation
      run: |
        npm install -g @capacitor/cli@latest
        npx cap --version
        
    - name: Build web application
      run: |
        npm run build
        ls -la dist/
      
    - name: Configure Capacitor
      run: |
        npx cap copy android
        npx cap sync android
        
    - name: Verify Android project
      run: |
        ls -la android/
        cat android/gradle.properties || echo "No gradle.properties found"
        
    - name: Set Gradle properties
      run: |
        echo "org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=512m" >> android/gradle.properties
        echo "org.gradle.daemon=false" >> android/gradle.properties
        echo "org.gradle.parallel=false" >> android/gradle.properties
        echo "android.useAndroidX=true" >> android/gradle.properties
        echo "android.enableJetifier=true" >> android/gradle.properties
        
    - name: Grant execute permission for gradlew
      run: chmod +x android/gradlew
      
    - name: Clean and build Android APK
      run: |
        cd android
        ./gradlew clean
        ./gradlew assembleDebug --no-daemon --stacktrace --info
        
    - name: Verify APK was created
      run: |
        ls -la android/app/build/outputs/apk/debug/
        file android/app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: arqueos-gasolinera-debug-v${{ github.run_number }}
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: Build Summary
      run: |
        echo "âœ… APK compilado exitosamente!"
        echo "ðŸ“± Archivo: app-debug.apk"
        echo "ðŸ’¾ TamaÃ±o: $(du -h android/app/build/outputs/apk/debug/app-debug.apk | cut -f1)"
        echo "ðŸ”— Descargar desde: Actions > Workflow runs > Artifacts"
        echo ""
        echo "ðŸ“‹ Para descargar:"
        echo "1. Ve a la pestaÃ±a Actions de tu repositorio"
        echo "2. Busca el workflow mÃ¡s reciente"
        echo "3. Descarga el artifact 'arqueos-gasolinera-debug-v${{ github.run_number }}'"
        echo "4. Instala en Android activando 'Fuentes desconocidas'"